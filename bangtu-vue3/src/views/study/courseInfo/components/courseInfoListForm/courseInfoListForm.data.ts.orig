import { FormSchema } from '/@/components/Form';
import { render } from '/@/utils/common/renderUtils';
import { h } from 'vue'
import { Switch,InputNumber } from 'ant-design-vue';
import { render } from '/@/utils/common/renderUtils';
import { cloneDeep } from 'lodash-es';
import {  } from '../../courseInfo.api';
import { useMessage } from '/@/hooks/web/useMessage';

export const schemasClass: FormSchema[] = [
    {
        label: '',
        field: 'id',
        show:false,
        component: 'Input',
        required: true,
        colProps: {
          span: 12
        },
    },
    {
        label: '课程名称',
        field: 'name',
        component: 'Input',
        required: true,
        colProps: {
           span: 12
        },
    },
    {
        label: '负责讲师',
        field: 'courseTeacherVOList',
        component: 'JSelectTeacher',
        required: true,
        colProps: {
           span: 12
        },
        componentProps: {
          rowKey: 'id',
          labelKey: 'name',
          isRadioSelection:true,
          placeholder:'只能单选',
        },
    },
    {
        label: '课程服务',
        field: 'courseServerVOList',
        component: 'JSelectMultiple',
        required: true,
        componentProps:{
          dictCode:'course_service',
        },
        colProps: {
           span: 12
        },
    },
    {
        label: '模拟观看人数',
        field: 'studyCount',
        component: 'Input',
        itemProps: {
          extra: '谨慎填写学习人数',
        },
        colProps: {
           span: 12
        },
    },
    // {
    //   label: '书籍来源',
    //   field: 'sourceType',
    //   component: 'RadioGroup',
    //   required: true,
    //   componentProps: {
    //     options: [
    //       {
    //         label: '原创',
    //         value: 1,
    //       },
    //       {
    //         label: '转载',
    //         value: 2,
    //       }
    //     ],
    //   },
    //   colProps: {
    //      span: 12,
    //      offset: 0
    //   },
    // },
    // {
    //     label: '转载来源',
    //     field: 'sourceContent',
    //     component: 'Input',
    //     colProps: {
    //        span: 12,
    //     },
    // },
    // {
    //   label: '为公共书籍',
    //   field: 'isCommon',
    //   component: 'RadioGroup',
    //   required: true,
    //   componentProps: {
    //     options: [
    //       {
    //         label: '是',
    //         value: 1,
    //       },
    //       {
    //         label: '否',
    //         value: 0,
    //       }
    //     ],
    //   },
    //   colProps: {
    //      span: 12,
    //      offset: 0
    //   },
    // },
    {
      label: '封面上传',
      field: 'imgUrl',
       component: 'JImageUpload',
       required: true,
       componentProps:{
        },
        colProps: {
           span: 12,
           offset: 0
        },
    },
    {
      label: '开课时间',
      field: 'datetime',
       component: 'RangePicker',
       componentProps:{
        format:'YYYY-MM-DD HH:mm:ss'
        },
        colProps: {
           span: 12,
           offset: 0
        },
    },
];
export const schemasCharge: FormSchema[] = [
  {
      label: '微信账号',
      field: 'wechatNumber',
      component: 'Input',
      colProps: {
         span: 12,
         offset: 0
      },
  },
  {
      label: 'QQ账号',
      field: 'qqNumber',
      component: 'Input',
      colProps: {
         span: 12,
         offset: 0
      },
  },
  {
      label: '在线咨询',
      field: 'onlineContactUrl',
      component: 'Input',
      componentProps:{
        placeholder:'请输入在线咨询链接'
      },
      colProps: {
         span: 12,
         offset: 0
      },
  },
  {
      label: '联系电话',
      field: 'contactPhone',
      component: 'Input',
      colProps: {
         span: 12,
         offset: 0
      },
  },
  {
    label: '微信二维码',
    field: 'contactUrl',
     component: 'JImageUpload',
     componentProps:{
      },
      colProps: {
         span: 12,
         offset: 0
      },
  },
  {
    label: '企业微信二维码',
    field: 'enterpriseContactUrl',
     component: 'JImageUpload',
     componentProps:{
      },
      colProps: {
         span: 12,
         offset: 0
      },
  },
];
export const schemasCentont: FormSchema[] = [
  // {
  //     label: '书籍导语',
  //     field: 'remark',
  //     component: 'Input',
  //     required: true,
  //     colProps: {
  //        span: 12,
  //        offset: 6
  //     },
  // },
  // {
  //     label: '书籍摘要',
  //     field: 'summary',
  //     component: 'Input',
  //     required: true,
  //     colProps: {
  //        span: 12,
  //        offset: 6
  //     },
  // },
  {
    field: 'summary',
    label: '课程摘要',
    component: 'Input',
    required: true,
    render: render.renderTinymce,
    colProps: {
       span: 12,
       offset: 6
    },
  },
  {
    field: 'content',
    label: '课程介绍',
    component: 'InputTextArea',
    required: true,
    colProps: {
       span: 12,
       offset: 6
    },
  },
];
//表单数据
export const step1Schemas: FormSchema[] = [
  {
    field: 'account',
    component: 'Select',
    label: '付款账户',
    required: true,
    defaultValue: '1',
    componentProps: {
      options: [
        {
          label: 'anncwb@126.com',
          value: '1',
        },
      ],
    },
  },
  {
    field: 'fac',
    component: 'InputGroup',
    label: '收款账户',
    required: true,
    defaultValue: 'test@example.com',
    slot: 'fac',
  },
  {
    field: 'pay',
    component: 'Input',
    label: '',
    defaultValue: 'zfb',
    show: false,
  },
  {
    field: 'payeeName',
    component: 'Input',
    label: '收款人姓名',
    defaultValue: 'Jeecg',
    required: true,
  },
  {
    field: 'money',
    component: 'Input',
    label: '转账金额',
    defaultValue: '500',
    required: true,
    renderComponentContent: () => {
      return {
        prefix: () => '￥',
      };
    },
  },
];

export const step2Schemas: FormSchema[] =   function (showTable) {
  return [
    {
      label: '收费规则',
      field: 'costType',
      component: 'RadioGroup',
      required: true,
      componentProps: {
        onchange(e){
          if(e.target.value == 2||e.target.value == 4){
            showTable.value = true
          }else{
            showTable.value = false
          }
        },
        options: [
          {
            label: '免费课程',
            value: 1,
          },
          {
            label: '限时免费',
            value: 2,
          },
          {
            label: '会员免费',
            value: 3,
          },
          {
            label: '全部免费',
            value: 4,
          }
        ],
      },
      colProps: {
         span: 12,
         offset: 6
      },
    },
    {
      label: '限时免费',
      field: 'freeEndTime',
      required: true,
      show:({model})=>{
        return model.costType == '2'
      },
       component: 'RangePicker',
       componentProps:{
        format:'YYYY-MM-DD HH:mm:ss'
        },
        colProps: {
           span: 12,
           offset: 6
        },
    },
    {
      label: '会员打折',
      field: 'isMemberDiscount',
      component: 'RadioGroup',
      required: true,
      show:({model})=>{
        return model.costType == '2'||model.costType == '4'
      },
      componentProps: {
        options: [
          {
            label: '是',
            value: 1,
          },
          {
            label: '否',
            value: 0,
          }
        ],
      },
      colProps: {
         span: 12,
         offset: 6
      },
    },
    {
        label: '会员折扣额度',
        field: 'discountAmount',
        component: 'Input',
        show:({model})=>{
          return model.costType == '2'||model.costType == '4'
        },
        required: true,
        colProps: {
           span: 12,
           offset: 6
        },
    },
    {
      label: '可否使用优惠卷',
      field: 'isCoupon',
      component: 'RadioGroup',
      show:({model})=>{
        return model.costType == '2'||model.costType == '4'
      },
      required: true,
      componentProps: {
        options: [
          {
            label: '是',
            value: 1,
          },
          {
            label: '否',
            value: 0,
          }
        ],
      },
      colProps: {
         span: 12,
         offset: 6
      },
    },
    {
      label: '限时活动',
      field: 'isActivity',
      component: 'RadioGroup',
      show:({model})=>{
        return model.costType == '2'||model.costType == '4'
      },
      required: true,
      componentProps: {
        options: [
          {
            label: '是',
            value: 1,
          },
          {
            label: '否',
            value: 0,
          }
        ],
      },
      colProps: {
         span: 12,
         offset: 6
      },
    },
    {
      label: '活动截止',
      field: 'activityEndTime',
      show:({model})=>{
        return model.costType == '2'||model.costType == '4'
      },
      required: true,
       component: 'RangePicker',
       componentProps:{
        format:'YYYY-MM-DD HH:mm:ss'
        },
        colProps: {
           span: 12,
           offset: 6
        },
    },
  ];

} 

export const columnsForm: BasicColumn[] = [
  {
   title: '购买规格(月)',
   align:"center",
   dataIndex: 'specsCount',
   customRender:({record}) => {
      return  h(InputNumber,{
       defaultValue: record.specsCount || 0,
       onChange(value){
        record.specsCount=value
       }
      //  loading: record.pendingStatus,
      //  onClick(checked:boolean){
      //    record.pendingStatus = true;
      //    let newStatus = checked?1:0;
      //    const { createMessage } = useMessage();
      //    // let data = cloneDeep(record);
      //    // data.isEnable = newStatus;
      //    let data = {
      //      status:record.status,
      //      userId:record.userId
      //    }
      //    updateEnable(data).then(res =>{
      //      record.status = newStatus;
      //    }).catch(() => {
      //      createMessage.error('修改状态失败');
      //    }).finally(() => {
      //      record.pendingStatus = false;
      //    });
      //  }
      })
    },
  },
  {
   title: '原价（元）',
   align:"center",
   dataIndex: 'originalPrice',
   customRender:({record}) => {
      return  h(InputNumber,{
       defaultValue: record.originalPrice || 0,
       onChange(value){
        record.originalPrice=value
       }
      //  loading: record.pendingStatus,
      //  onClick(checked:boolean){
      //    record.pendingStatus = true;
      //    let newStatus = checked?1:0;
      //    const { createMessage } = useMessage();
      //    // let data = cloneDeep(record);
      //    // data.isEnable = newStatus;
      //    let data = {
      //      status:record.status,
      //      userId:record.userId
      //    }
      //    updateEnable(data).then(res =>{
      //      record.status = newStatus;
      //    }).catch(() => {
      //      createMessage.error('修改状态失败');
      //    }).finally(() => {
      //      record.pendingStatus = false;
      //    });
      //  }
      })
    },
  },
  {
   title: '现价（元）',
   align:"center",
   dataIndex: 'presentPrice',
   customRender:({record}) => {
      return  h(InputNumber,{
       defaultValue: record.presentPrice || 0,
       onChange(value){
        record.presentPrice=value
       }
      //  loading: record.pendingStatus,
      //  onClick(checked:boolean){
      //    record.pendingStatus = true;
      //    let newStatus = checked?1:0;
      //    const { createMessage } = useMessage();
      //    // let data = cloneDeep(record);
      //    // data.isEnable = newStatus;
      //    let data = {
      //      status:record.status,
      //      userId:record.userId
      //    }
      //    updateEnable(data).then(res =>{
      //      record.status = newStatus;
      //    }).catch(() => {
      //      createMessage.error('修改状态失败');
      //    }).finally(() => {
      //      record.pendingStatus = false;
      //    });
      //  }
      })
    },
  },
];
/**
 * 角色用户Columns
 */
 export const userColumns = [
  {
    title: '姓名',
    dataIndex: 'nickName',
    align:"center",
  },
  {
    title: '阅读进展',
    dataIndex: 'studyDuration',
    align:"center",
  },
  {
    title: '阅读类型',
    dataIndex: 'payType',
    align:"center",
    customRender:({record}) => {
       return record.payType==1?'已购买':'试读'
     },
  },
  {
    title: '学习状态',
    dataIndex: 'isFinish',
    align:"center",
    customRender:({record}) => {
       return record.isFinish==1?'已完成':'未完成'
     },
  },
  {
    title: '最后阅读时间',
    dataIndex: 'updateTime',
    align:"center",
  },
];
export const searchFormSchema: FormSchema[] = [
  {
    field: 'roleName',
    label: '角色名称',
    component: 'Input',
    colProps: { span: 6 },
  },
];